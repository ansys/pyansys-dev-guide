name: CI

on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.13'
  DOCUMENTATION_CNAME: 'dev.docs.pyansys.com'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:

  doc-style:
    name: "Check documentation style"
    runs-on: ubuntu-latest
    steps:
      - name: "Check documentation style"
        uses: ansys/actions/doc-style@v8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  doc-build:
    name: "Build project documentation"
    runs-on: ubuntu-22.04
    steps:
      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@v3

      - name: "Install mermaid-cli"
        run: npm install -g @mermaid-js/mermaid-cli

      - name: "Install GraphViz"
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install graphviz

      - name: "Build project documentation"
        uses: ansys/actions/doc-build@v8
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          use-python-cache: false
          skip-install: true
          dependencies: 'texlive-latex-extra latexmk nodejs npm'

  doc-deploy:
    name: "Deploy documentation"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && !contains(github.ref, 'refs/tags')
    needs: doc-build
    steps:
  
      - name: "Download HTML documentation artifacts"
        uses: actions/download-artifact@v4
        with:
          name: documentation-html
          path: documentation-html

      - uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: documentation-html
          cname: ${{ env.DOCUMENTATION_CNAME }}
          full_commit_message: ${{ github.event.head_commit.message }}
          force_orphan: true

  release-github:
    name: "Release to GitHub"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: doc-build
    steps:

    - name: "Download HTML documentation"
      uses: actions/download-artifact@v4
      with:
        name: documentation-html
        path: documentation-html

    - name: "Zip HTML documentation"
      uses: vimtor/action-zip@v1
      with:
        files: documentation-html
        dest: documentation-html.zip

    - name: "Download PDF documentation"
      uses: actions/download-artifact@v4
      with:
        name: documentation-pdf
        path: documentation-pdf

    - name: "Zip PDF documentation"
      uses: vimtor/action-zip@v1
      with:
        files: documentation-pdf
        dest: documentation-pdf

    - name: "Display the structure of downloaded files"
      shell: bash
      run: ls -R

    - name: "Release to GitHub"
      uses: softprops/action-gh-release@v2
      with:
        files: |
          documentation-html.zip
          documentation-pdf

  doc-deploy-github-release:
    name: "Deploy documentation (stable)"
    runs-on: ubuntu-latest
    needs: [release-github]
    steps:
  
      - name: "Download HTML documentation artifacts"
        uses: actions/download-artifact@v4
        with:
          name: documentation-html
          path: documentation-html

      - uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: documentation-html
          cname: ${{ env.DOCUMENTATION_CNAME }}
          full_commit_message: ${{ github.event.head_commit.message }}
          force_orphan: true
