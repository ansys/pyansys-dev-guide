
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/pyvista_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_pyvista_example.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_pyvista_example.py:


.. _adding_a_new_gallery_example:

Adding a new gallery example
============================

This example shows how to add a new example to the PyAnsys `Sphinx-Gallery
<https://sphinx-gallery.github.io/>`_. You can use this example as a template
for adding your examples.

Each example should have a reference tag/key in the form:

``.. _<example-name>_example:``.

The ``.. _`` is necessary. Everything that follows is your reference tag, which
can potentially be used within a docstring. All references should be in snake case.

The first section, which is text, provides a brief overview of what the example is.
When using this example as a template, you would change the title to an appropriate
one for your example.

Add new examples as Python scripts like this:

``examples/<index>-<directory-name>/<some-example>.py``

.. note::

   Avoid creating directories unless absolutely necessary. If you *must*
   create a directory, make sure to add a ``README.txt`` file containing a
   reference, a title, and a one-sentence description of the directory.
   Otherwise, Sphinx ignores the new directory.

Example file names should use snake case and be hyphen-separated:

``some-example.py``

After this text section is the first code block. This is where you
typically set up your imports.

.. GENERATED FROM PYTHON SOURCE LINES 63-66

.. code-block:: Python


    import pyvista as pv








.. GENERATED FROM PYTHON SOURCE LINES 67-82

Section title
~~~~~~~~~~~~~

Code blocks can be broken up with text sections, which are interpreted as
ReStructuredText.

The text sections are also translated into a markdown cell in the generated Jupyter
notebook or in the HTML documentation.

Text sections can contain any information that you may have regarding the example,
such as step-by-step comments and notes regarding motivations.

As in Jupyter notebooks, if a statement is unassigned at the end of a code
block, output is generated and printed to the screen according to its
``__repr__`` method. Otherwise, you can use the ``print()`` function to output text.

.. GENERATED FROM PYTHON SOURCE LINES 82-88

.. code-block:: Python


    # Create a dataset and exercise its ``__repr__`` method

    dataset = pv.Sphere()
    dataset






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table style='width: 100%;'><tr><th>Header</th><th>Data Arrays</th></tr><tr><td>
    <table style='width: 100%;'>
    <tr><th>PolyData</th><th>Information</th></tr>
    <tr><td>N Cells</td><td>1680</td></tr>
    <tr><td>N Points</td><td>842</td></tr>
    <tr><td>N Strips</td><td>0</td></tr>
    <tr><td>X Bounds</td><td>-4.993e-01, 4.993e-01</td></tr>
    <tr><td>Y Bounds</td><td>-4.965e-01, 4.965e-01</td></tr>
    <tr><td>Z Bounds</td><td>-5.000e-01, 5.000e-01</td></tr>
    <tr><td>N Arrays</td><td>1</td></tr>
    </table>

    </td><td>
    <table style='width: 100%;'>
    <tr><th>Name</th><th>Field</th><th>Type</th><th>N Comp</th><th>Min</th><th>Max</th></tr>
    <tr><td>Normals</td><td>Points</td><td>float32</td><td>3</td><td>-1.000e+00</td><td>1.000e+00</td></tr>
    </table>

    </td></tr> </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 89-102

Plots and images
~~~~~~~~~~~~~~~~
If you use anything that outputs an image (for example, the
:func:`pyvista.Plotter.show` function), the resulting image is rendered in the
HTML documentation.

.. note::

   Unless ``sphinx_gallery_thumbnail_number = <int>`` is included at the top
   of the example script, the first figure (this one) is used for the
   gallery thumbnail image.

   Also note that this image number uses one-based indexing.

.. GENERATED FROM PYTHON SOURCE LINES 102-105

.. code-block:: Python


    dataset.plot(text="Example Figure")




.. image-sg:: /examples/images/sphx_glr_pyvista_example_001.png
   :alt: pyvista example
   :srcset: /examples/images/sphx_glr_pyvista_example_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 106-115

Caveat - plotter must be within one cell
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
It's not possible to have a single :class:`pyvista.Plotter` object across
multiple cells because these are closed out automatically at the end of a
cell.

This code exercise the :class:`pyvista.Actor` ``repr`` to demonstrate
why you might want to instantiate a plotter without showing it in the same
cell:

.. GENERATED FROM PYTHON SOURCE LINES 115-120

.. code-block:: Python


    pl = pv.Plotter()
    actor = pl.add_mesh(dataset)
    actor




.. image-sg:: /examples/images/sphx_glr_pyvista_example_002.png
   :alt: pyvista example
   :srcset: /examples/images/sphx_glr_pyvista_example_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Actor (0x7f93e9061000)
      Center:                     (0.0, 0.0, 0.0)
      Pickable:                   True
      Position:                   (0.0, 0.0, 0.0)
      Scale:                      (1.0, 1.0, 1.0)
      Visible:                    True
      X Bounds                    -4.993E-01, 4.993E-01
      Y Bounds                    -4.965E-01, 4.965E-01
      Z Bounds                    -5.000E-01, 5.000E-01
      User matrix:                Identity
      Has mapper:                 True

    Property (0x7f93eae75780)
      Ambient:                     0.0
      Ambient color:               Color(name='lightblue', hex='#add8e6ff', opacity=255)
      Anisotropy:                  0.0
      Color:                       Color(name='lightblue', hex='#add8e6ff', opacity=255)
      Culling:                     "none"
      Diffuse:                     1.0
      Diffuse color:               Color(name='lightblue', hex='#add8e6ff', opacity=255)
      Edge color:                  Color(name='black', hex='#000000ff', opacity=255)
      Edge opacity:                1.0
      Interpolation:               InterpolationType.FLAT
      Lighting:                    True
      Line width:                  1.0
      Metallic:                    0.0
      Opacity:                     1.0
      Point size:                  5.0
      Render lines as tubes:       False
      Render points as spheres:    False
      Roughness:                   0.5
      Show edges:                  False
      Specular:                    0.0
      Specular color:              Color(name='lightblue', hex='#add8e6ff', opacity=255)
      Specular power:              100.0
      Style:                       "Surface"

    DataSetMapper (0x7f93eae75780)
      Scalar visibility:           False
      Scalar range:                (0.0, 1.0)
      Interpolate before mapping:  True
      Scalar map mode:             default
      Color mode:                  direct

    Attached dataset:
    PolyData (0x7f93eae750c0)
      N Cells:    1680
      N Points:   842
      N Strips:   0
      X Bounds:   -4.993e-01, 4.993e-01
      Y Bounds:   -4.965e-01, 4.965e-01
      Z Bounds:   -5.000e-01, 5.000e-01
      N Arrays:   1



.. GENERATED FROM PYTHON SOURCE LINES 121-127

This cell cannot run the plotter
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Because the plotter is already closed by Sphinx-Gallery, the following code
would raise an error:

>>> pl.show()

.. GENERATED FROM PYTHON SOURCE LINES 127-132

.. code-block:: Python


    # You can, however, close out the plotter or access other attributes.

    pl.close()








.. GENERATED FROM PYTHON SOURCE LINES 133-146

Create a pull request
~~~~~~~~~~~~~~~~~~~~~
Once your example is complete and you've verified that it builds locally, you can
create a pull request.

Branches containing examples should be prefixed with ``docs/`` as per `Branch-naming conventions
<https://dev.docs.pyansys.com/how-to/contributing.html#branch-naming-conventions>`_.

.. note::

   You only need to create the Python source example (PY file). Sphinx-Gallery
   automatically generates the Jupyter notebook and the RST file for generating
   the HTML documentation page.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.994 seconds)


.. _sphx_glr_download_examples_pyvista_example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: pyvista_example.ipynb <pyvista_example.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: pyvista_example.py <pyvista_example.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: pyvista_example.zip <pyvista_example.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
